import React, { Component } from "react";
import Form from "react-validation/build/form";
import Input from "react-validation/build/input";
import CheckButton from "react-validation/build/button";
import { isEmail } from "validator";
import { Link, Switch, Redirect } from 'react-router-dom'
import AuthLogin from "../Authentications/AuthLogin";
import Spinner from 'react-bootstrap/Spinner'



const required = value => {
  if (!value) {
    return (
      <div className="alert alert-danger" role="alert">
        This field is required!
      </div>
    );
  }
};

const email = value => {
  if (!isEmail(value)) {
    return (
      <div className="alert alert-danger" role="alert">
        This is not a valid email.
      </div>
    );
  }
};

const vusername = value => {
  if (value.length < 3 || value.length > 20) {
    return (
      <div className="alert alert-danger" role="alert">
        The username must be between 3 and 20 characters.
      </div>
    );
  }
};

const vpassword = value => {
  if (value.length < 6 || value.length > 40) {
    return (
      <div className="alert alert-danger" role="alert">
        The password must be between 6 and 40 characters.
      </div>
    );
  }
};

export default class Register extends Component {

  constructor(props) {
    super(props);
    this.handleRegister = this.handleRegister.bind(this);
    this.onChangeFirstName = this.onChangeFirstName.bind(this);
    this.onChangeLastName = this.onChangeLastName.bind(this);
    this.onChangeAddress = this.onChangeAddress.bind(this);
    this.onChangeLG = this.onChangeLG.bind(this);
    this.onChangeState = this.onChangeState.bind(this);
    this.onChangeUsername = this.onChangeUsername.bind(this);
    this.onChangeEmail = this.onChangeEmail.bind(this);
    this.onChangePassword = this.onChangePassword.bind(this);
    this.onChangeDob = this.onChangeDob.bind(this);
    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);



    this.state = {
      first_name: "",
      last_name: "",
      address: "",
      lga: "",
      state: "",
      username: "",
      dob: "",
      email: "",
      password: "",
      phone_number: "",
      successful: false,
      message: ""
    };
  }


  componentDidMount() {
    const script = document.createElement("script");

    script.src = "./assets/dist/assets/js/pages/custom/wizard/wizard-5.js";
    script.async = true;

    document.body.appendChild(script);
  }



  onChangeFirstName(e) {
    this.setState({
      first_name: e.target.value
    });
  }
  onChangeLastName(e) {
    this.setState({
      last_name: e.target.value
    });
  }
  onChangeAddress(e) {
    this.setState({
      address: e.target.value
    });
  }
  onChangeLG(e) {
    this.setState({
      lga: e.target.value
    });
  }
  onChangeState(e) {
    this.setState({
      state: e.target.value
    });
  }

  onChangeUsername(e) {
    this.setState({
      username: e.target.value
    });
  }

  onChangeEmail(e) {
    this.setState({
      email: e.target.value
    });
  }

  onChangePassword(e) {
    this.setState({
      password: e.target.value
    });
  }
  onChangeDob(e) {
    this.setState({
      dob: e.target.value
    });
  }
  onChangePhoneNumber(e) {
    this.setState({
      phone_number: e.target.value
    });
  }

  handleRegister(e) {
    e.preventDefault();

    this.setState({
      message: "",
      successful: false
    });

    this.form.validateAll();

    if (this.checkBtn.context._errors.length === 0) {
      AuthLogin.register(
        this.state.username,
        this.state.email,
        this.state.password
      ).then(
        response => {
          this.setState({
            message: response.data.message,
            successful: true
          });
        },
        error => {
          const resMessage =
            (error.response &&
              error.response.data &&
              error.response.data.message) ||
            error.message ||
            error.toString();

          this.setState({
            successful: false,
            message: resMessage
          });
        }
      );
    }
  }
  render() {

    const { loading } = this.state;

    // if (this.state.redirectToReferrer) {
    //     return (<Redirect to={'/dashboard'} />)
    // }

    // if (sessionStorage.getItem('token')) {
    //     return (<Redirect to={'/dashboard'} />)
    // }

    return (

      <div className="content d-flex flex-column flex-column-fluid" id="kt_content">
        {/*begin::Subheader*/}
        <div className="subheader py-2 py-lg-6 subheader-transparent" id="kt_subheader">
          <div className="container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            {/*begin::Info*/}
            <div className="d-flex align-items-center flex-wrap mr-1">
              {/*begin::Page Heading*/}
              <div className="d-flex align-items-baseline flex-wrap mr-5">
                {/*begin::Page Title*/}
                {/* <h5 className="text-dark font-weight-bold my-1 mr-5">Wizard 5</h5> */}
                {/*end::Page Title*/}
                {/*begin::Breadcrumb*/}
                <ul className="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                  <li className="breadcrumb-item">
                    {/* <a href className="text-muted">Pages</a> */}
                  </li>
                  <li className="breadcrumb-item">
                    {/* <a href className="text-muted">Wizard 5</a> */}
                  </li>
                </ul>
                {/*end::Breadcrumb*/}
              </div>
              {/*end::Page Heading*/}
            </div>
            {/*end::Info*/}
            {/*begin::Toolbar*/}
            <div className="d-flex align-items-center">
              {/*begin::Actions*/}
              {/* <a href="#" className="btn btn-light-primary font-weight-bolder btn-sm">Actions</a> */}
              {/*end::Actions*/}

            </div>
            {/*end::Toolbar*/}
          </div>
        </div>
        {/*end::Subheader*/}
        {/*begin::Entry*/}
        <div className="d-flex flex-column-fluid">
          {/*begin::Container*/}
          <div className="container">
            {/*begin::Card*/}
            <div className="card card-custom">
              {/*begin::Card Body*/}
              <div className="card-body p-0">
                {/*begin::Wizard 5*/}
                <div className="wizard wizard-5 d-flex flex-column flex-lg-row flex-row-fluid" id="kt_wizard">
                  {/*begin::Aside*/}
                  <div className="wizard-aside bg-white d-flex flex-column flex-row-auto w-100 w-lg-300px w-xl-400px w-xxl-500px">
                    {/*begin::Aside Top*/}
                    <div className="d-flex flex-column-fluid flex-column px-xxl-30 px-10">
                      {/*begin: Wizard Nav*/}
                      <div className="wizard-nav d-flex d-flex justify-content-center pt-10 pt-lg-20 pb-5">
                        {/*begin::Wizard Steps*/}
                        <div className="wizard-steps">
                          {/*begin::Wizard Step 1 Nav*/}
                          <div className="wizard-step" data-wizard-type="step" data-wizard-state="current">
                            <div className="wizard-wrapper">
                              <div className="wizard-icon">
                                <i className="wizard-check ki ki-check" />
                                <span className="wizard-number">1</span>
                              </div>
                              <div className="wizard-label">
                                <h3 className="wizard-title">Account Settings</h3>
                                <div className="wizard-desc">Setup Your Account Details</div>
                              </div>
                            </div>
                          </div>
                          {/*end::Wizard Step 1 Nav*/}
                          {/*begin::Wizard Step 1 Nav*/}
                          <div className="wizard-step" data-wizard-type="step" >
                            <div className="wizard-wrapper">
                              <div className="wizard-icon">
                                <i className="wizard-check ki ki-check" />
                                <span className="wizard-number">2</span>
                              </div>
                              <div className="wizard-label">
                                <h3 className="wizard-title">Account Details</h3>
                                <div className="wizard-desc">Setup Your Account Details</div>
                              </div>
                            </div>
                          </div>
                          {/*end::Wizard Step 1 Nav*/}

                          {/*end::Wizard Step 2 Nav*/}
                          {/*begin::Wizard Step 3 Nav*/}
                          <div className="wizard-step" data-wizard-type="step" >
                            <div className="wizard-wrapper">
                              <div className="wizard-icon">
                                <i className="wizard-check ki ki-check" />
                                <span className="wizard-number">4</span>
                              </div>
                              <div className="wizard-label">
                                <h3 className="wizard-title">Completed!</h3>
                                <div className="wizard-desc">Review and Submit</div>
                              </div>
                            </div>
                          </div>

                        
                          {/*end::Wizard Step 3 Nav*/}

                          <div className="wizard-step" data-wizard-type="step">

                         </div>
                        </div>
                        {/*end::Wizard Steps*/}
                      </div>
                      {/*end: Wizard Nav*/}

                    </div>
                    {/*end::Aside Top*/}
                    {/*begin::Aside Bottom*/}


                    {/*end::Aside Bottom*/}
                    <div className="d-flex flex-row-auto bgi-no-repeat bgi-position-y-bottom bgi-position-x-center bgi-size-contain pt-2 pt-lg-8 h-400px" style={{ backgroundImage: 'url(assets/dist/assets/media/svg/illustrations/features.svg)' }} />

                  </div>
                  {/*begin::Aside*/}

                  {/*begin::Content*/}
                  <div className="wizard-content bg-gray-100 d-flex flex-column flex-row-fluid py-15 px-5 px-lg-10">

                    {/*begin::Title*/}
                    {/* <div className="text-right mb-lg-30 mb-15 mr-xxl-10">
                <span className="font-weight-bold text-muted font-size-h5">Having issues?</span>
                <a href="javascript:;" className="font-weight-bolder text-primary font-size-h4" id="kt_login_signup">Get Help</a>
              </div> */}
                    {/*end::Title*/}
                    {/*begin::Form*/}
                    <div className="d-flex justify-content-center flex-row-fluid">
                      <Form onSubmit={this.handleRegister}  ref={c => {  this.form = c;}}
                        className="pb-5 w-100 w-md-450px w-lg-500px" noValidate="novalidate" id="kt_form">

                        {!this.state.successful && (
                          <div>

                            {/*begin: Wizard Step 1*/}
                            <div className="pb-5" data-wizard-type="step-content" data-wizard-state="current">
                              {/*begin::Title*/}
                              {/* <div className="pb-10 pb-lg-15">
                      <h3 className="font-weight-bolder text-dark font-size-h2">Create Account</h3>
                      <div className="text-muted font-weight-bold font-size-h5">Already have an Account ?
                      <Link to="/login" className="text-primary font-weight-bolder">Sign In</Link> </div>
                    </div> */}
                              {/*begin::Title*/}
                              {/*begin::Form Group*/}

                              <div className="form-group">

                                <label className="font-size-h6 font-weight-bolder text-dark">First Name</label>

                                <Input
                                  name="firstname"
                                  value={this.state.first_name}
                                  onChange={this.onChangeFirstName}
                                  validations={[required]} type="text" className="form-control h-auto p-5 border-0 rounded-lg font-size-h6" placeholder="First Name" defaultValue />
                              </div>
                              {/*end::Form Group*/}

                              {/*begin::Form Group*/}
                              <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Last Name</label>
                                <Input name="lastname"
                                  value={this.state.last_name}
                                  onChange={this.onChangeLastName}
                                  validations={[required]} type="text" className="form-control h-auto p-6 border-0 rounded-lg font-size-h6" placeholder="Last Name" defaultValue />
                              </div>


                              <div className="row">
                                <div className="col-lg-12 col-md-6">
                                  {/*end::Form Group*/}
                                  <div className="form-group">
                                    <label className="font-size-h6 font-weight-bolder text-dark">State</label>
                                    <select value={this.state.state}
                                      onChange={this.onChangeState}
                                      validations={[required]} type="text" className="form-control h-auto p-5 border-0 rounded-lg font-size-h6">
                                      <option value>Select</option>
                                      <option value="ABUJA">ABUJA FCT</option>
                                      <option value="ABIA">ABIA</option>
                                      <option value="ADAMAWA">ADAMAWA</option>
                                      <option value="AKWA IBOM">AKWA IBOM</option>
                                      <option value="ANAMBRA">ANAMBRA</option>
                                      <option value="BAUCHI">BAUCHI</option>
                                      <option value="BAYELSA">BAYELSA</option>
                                      <option value="BENUE">BENUE</option>
                                      <option value="BORNO">BORNO</option>
                                      <option value="CROSS RIVER">CROSS RIVER</option>
                                      <option value="DELTA">DELTA</option>
                                      <option value="EBONYI">EBONYI</option>
                                      <option value="EDO">EDO</option>
                                      <option value="EKITI">EKITI</option>
                                      <option value="ENUGU">ENUGU</option>
                                      <option value="GOMBE">GOMBE</option>
                                      <option value="IMO">IMO</option>
                                      <option value="JIGAWA">JIGAWA</option>
                                      <option value="KADUNA">KADUNA</option>
                                      <option value="KANO">KANO</option>
                                      <option value="KATSINA">KATSINA</option>
                                      <option value="KEBBI">KEBBI</option>
                                      <option value="KOGI">KOGI</option>
                                      <option value="KWARA">KWARA</option>
                                      <option value="LAGOS">LAGOS</option>
                                      <option value="NASSARAWA">NASSARAWA</option>
                                      <option value="NIGER">NIGER</option>
                                      <option value="OGUN">OGUN</option>
                                      <option value="ONDO">ONDO</option>
                                      <option value="OSUN">OSUN</option>
                                      <option value="OYO">OYO</option>
                                      <option value="PLATEAU">PLATEAU</option>
                                      <option value="RIVERS">RIVERS</option>
                                      <option value="SOKOTO">SOKOTO</option>
                                      <option value="TARABA">TARABA</option>
                                      <option value="YOBE">YOBE</option>
                                      <option value="ZAMFARA">ZAMFARA</option>
                                    </select>
                                  </div>
                                  {/*end::Form Group*/}
                                </div>
                              </div>
                              {/*begin::Row*/}
                              <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">LG</label>
                                <Input name="lga"
                                  value={this.state.lga}
                                  onChange={this.onChangeLG}
                                  validations={[required]} type="text" className="form-control h-auto p-6 border-0 rounded-lg font-size-h6" placeholder="LG" />
                              </div>

                              <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Address</label>
                                <Input name="address"
                                  value={this.state.address}
                                  onChange={this.onChangeAddress}
                                  validations={[required]} type="text" className="form-control h-auto p-5 border-0 rounded-lg font-size-h6" placeholder="Address" />
                              </div>

                              {/*end::Form Group*/}
                            </div>
                            {/*end: Wizard Step 1*/}

                            {/*begin: Wizard Step 2*/}
                            <div className="pb-5" data-wizard-type="step-content">
                              {/*begin::Title*/}
                              {/* <div className="pb-10 pb-lg-15">
                      <h3 className="font-weight-bolder text-dark font-size-h2">Address Details</h3>
                      <div className="text-muted font-weight-bold font-size-h4">Have a Different Address ?
                        <a href="#" className="text-primary font-weight-bolder">Add Address</a></div>
                    </div> */}
                              {/*end::Title*/}
                              <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Username</label>
                                <Input name="username"
                                  value={this.state.username}
                                  onChange={this.onChangeUsername}
                                  validations={[required]} type="text" className="form-control h-auto p-6 border-0 rounded-lg font-size-h6" placeholder="username" />
                              </div>
                              <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Password</label>
                                <Input name="password"
                                  value={this.state.password}
                                  onChange={this.onChangePassword}
                                  validations={[required]} type="password" className="form-control h-auto p-6 border-0 rounded-lg font-size-h6" placeholder="password" />
                              </div>
                              {/*begin::Form Group*/}
                              <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Email</label>
                                <Input name="email"
                                  value={this.state.email}
                                  onChange={this.onChangeEmail}
                                  validations={[required]} type="email" className="form-control h-auto p-6 border-0 rounded-lg font-size-h6" placeholder="Email" />
                              </div>

                              {/*begin::Form Group*/}
                              {/*end::Row*/}
                              <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Phone Number</label>
                                <Input name="phonenumber"
                                  value={this.state.phone_number}
                                  onChange={this.onChangePhoneNumber}
                                  validations={[required]} type="text" className="form-control h-auto p-6 border-0 rounded-lg font-size-h6" placeholder="phone number" />
                              </div>
                              <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Date of Birth</label>
                                <Input name="dob"
                                  value={this.state.dob}
                                  onChange={this.onChangeDob}
                                  validations={[required]} type="text" className="form-control h-auto p-6 border-0 rounded-lg font-size-h6" placeholder="YYYY-MM-DD" />
                              </div>

                            </div>
                            {/*end: Wizard Step 2*/}
                            {/*begin: Wizard Step 3*/}
                            <div className="pb-5" data-wizard-type="step-content">
                              {/*begin::Title*/}
                              <div className="pb-10 pb-lg-15">
                                <h3 className="font-weight-bolder text-dark font-size-h2">Complete</h3>
                                <div className="text-muted font-weight-bold font-size-h4">Complete Your Signup And Become A Member!</div>
                              </div>
                              {/*end::Title*/}
                              {/*begin::Section*/}
                              <h2 className="font-weight-bolder mb-3">Accoun Settings:</h2>
                              <div className="text-dark-50 font-weight-bold line-height-lg mb-8">
                                <div><h3>First Name: </h3></div>
                                <div ><h4>{this.state.first_name} </h4></div>
                                <div><h3>Last Name:</h3> </div>
                                <div ><h4>{this.state.last_name} </h4></div>
                                <div><h3>State:</h3> </div>
                                <div ><h4>{this.state.state} </h4></div>
                                <div><h3>LG:</h3> </div>
                                <div ><h4>{this.state.lga} </h4></div>
                                <div><h3>Address:</h3> </div>
                                <div ><h4>{this.state.address} </h4></div>
                              </div>
                              {/*end::Section*/}
                              {/*begin::Section*/}
                              <h2 className="font-weight-bolder mb-3">Account Details:</h2>
                              <div className="text-dark-50 font-weight-bold line-height-lg mb-8">
                                <div><h3>Username: </h3></div>
                                <div ><h4>{this.state.username} </h4></div>
                                <div><h3>Password: </h3></div>
                                <div ><h4>{this.state.password} </h4></div>
                                <div><h3>Email:</h3> </div>
                                <div ><h4>{this.state.email} </h4></div>
                                <div><h3>Phone Number: </h3></div>
                                <div ><h4>{this.state.phone_number} </h4></div>
                                <div><h3>Date of Birth: </h3></div>
                                <div ><h4>{this.state.dob} </h4></div>
                              </div>
                              {/*end::Section*/}
                              {/*begin::Section*/}
                              {/* <h4 className="font-weight-bolder mb-3">Support Channels:</h4>
                    <div className="text-dark-50 font-weight-bold line-height-lg mb-8">
                      <div>Overnight Delivery with Regular Packaging</div>
                      <div>Preferred Morning (8:00AM - 11:00AM) Delivery</div>
                    </div> */}
                              {/*end::Section*/}
                            </div>
                           
                          </div>

                        )}


<center> 
       
                                  
       {this.state.message && (
       
       <div className="pb-5" >
         <div
           className={
             this.state.successful
               ? "alert alert-custom alert-outline-success fade show mb-5"
               : "alert alert-custom alert-outline-danger fade show mb-5"
           }
           role="alert"
         >
           {this.state.message}
         </div>
       </div>
     )}</center>

<div className="d-flex justify-content-between pt-3">
  <div className="mr-2">
    <button type="button" className="btn btn-light-primary font-weight-bolder font-size-h6 pl-6 pr-8 py-4 my-3 mr-3" data-wizard-type="action-prev">
      <span className="svg-icon svg-icon-md mr-1">
        <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
          <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
            <polygon points="0 0 24 0 24 24 0 24" />
            <rect fill="#000000" opacity="0.3" transform="translate(15.000000, 12.000000) scale(-1, 1) rotate(-90.000000) translate(-15.000000, -12.000000)" x={14} y={7} width={2} height={10} rx={1} />
            <path d="M3.7071045,15.7071045 C3.3165802,16.0976288 2.68341522,16.0976288 2.29289093,15.7071045 C1.90236664,15.3165802 1.90236664,14.6834152 2.29289093,14.2928909 L8.29289093,8.29289093 C8.67146987,7.914312 9.28105631,7.90106637 9.67572234,8.26284357 L15.6757223,13.7628436 C16.0828413,14.136036 16.1103443,14.7686034 15.7371519,15.1757223 C15.3639594,15.5828413 14.7313921,15.6103443 14.3242731,15.2371519 L9.03007346,10.3841355 L3.7071045,15.7071045 Z" fill="#000000" fillRule="nonzero" transform="translate(9.000001, 11.999997) scale(-1, -1) rotate(90.000000) translate(-9.000001, -11.999997)" />
          </g>
        </svg>
      </span>Previous</button>
  </div>
  <div>
    <button type="button" className="btn btn-primary font-weight-bolder font-size-h6 pl-5 pr-8 py-4 my-3" data-wizard-type="action-submit">Submit
      <span className="svg-icon svg-icon-md ml-2">
        <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
          <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
            <polygon points="0 0 24 0 24 24 0 24" />
            <rect fill="#000000" opacity="0.3" transform="translate(8.500000, 12.000000) rotate(-90.000000) translate(-8.500000, -12.000000)" x="7.5" y="7.5" width={2} height={9} rx={1} />
            <path d="M9.70710318,15.7071045 C9.31657888,16.0976288 8.68341391,16.0976288 8.29288961,15.7071045 C7.90236532,15.3165802 7.90236532,14.6834152 8.29288961,14.2928909 L14.2928896,8.29289093 C14.6714686,7.914312 15.281055,7.90106637 15.675721,8.26284357 L21.675721,13.7628436 C22.08284,14.136036 22.1103429,14.7686034 21.7371505,15.1757223 C21.3639581,15.5828413 20.7313908,15.6103443 20.3242718,15.2371519 L15.0300721,10.3841355 L9.70710318,15.7071045 Z" fill="#000000" fillRule="nonzero" transform="translate(14.999999, 11.999997) scale(1, -1) rotate(90.000000) translate(-14.999999, -11.999997)" />
          </g>
        </svg>
      </span></button>
    <button type="button" className="btn btn-primary font-weight-bolder font-size-h6 pl-8 pr-4 py-4 my-3" data-wizard-type="action-next">Next Step
      <span className="svg-icon svg-icon-md ml-1">
        <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
          <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
            <polygon points="0 0 24 0 24 24 0 24" />
            <rect fill="#000000" opacity="0.3" transform="translate(8.500000, 12.000000) rotate(-90.000000) translate(-8.500000, -12.000000)" x="7.5" y="7.5" width={2} height={9} rx={1} />
            <path d="M9.70710318,15.7071045 C9.31657888,16.0976288 8.68341391,16.0976288 8.29288961,15.7071045 C7.90236532,15.3165802 7.90236532,14.6834152 8.29288961,14.2928909 L14.2928896,8.29289093 C14.6714686,7.914312 15.281055,7.90106637 15.675721,8.26284357 L21.675721,13.7628436 C22.08284,14.136036 22.1103429,14.7686034 21.7371505,15.1757223 C21.3639581,15.5828413 20.7313908,15.6103443 20.3242718,15.2371519 L15.0300721,10.3841355 L9.70710318,15.7071045 Z" fill="#000000" fillRule="nonzero" transform="translate(14.999999, 11.999997) scale(1, -1) rotate(90.000000) translate(-14.999999, -11.999997)" />
          </g>
        </svg>
      </span></button>
  




                            <CheckButton
                              style={{ display: "none" }}
                              ref={c => {
                                this.checkBtn = c;
                              }}
                            />
                          </div>
                        </div>

                      </Form>
                    </div>
                    {/*end::Form*/}
                  </div>
                  {/*end::Content*/}
                </div>
                {/*end::Wizard 5*/}
              </div>
              {/*end::Card Body*/}
            </div>
            {/*end::Card*/}
          </div>
          {/*end::Container*/}
        </div>
        {/*end::Entry*/}

      </div>


    );
  }
}












wizard 1 



import React, { Component } from "react";
import Form from "react-validation/build/form";
import Input from "react-validation/build/input";
import Textarea from "react-validation/build/textarea"
import CheckButton from "react-validation/build/button";
// import AuthService from "../services/auth.service";
// import { PostData } from "./PostData";
import Header from './Header';
import Footer from './Footer'
import axios from 'axios'
import AuthLogin from "../Authentications/AuthLogin";
import Modal from 'react-bootstrap/Modal'
import Button from 'react-bootstrap/Button'
import { Redirect, Link, Router, Switch } from 'react-router-dom';
import Menu_Aside from "./Menu_Aside";
import Spinner from 'react-bootstrap/Spinner'





const required = value => {
  if (!value) {
    return (
      <div className="alert alert-danger" role="alert">
        This field is required!
      </div>
    );
  }
};
// const required = value => {
//   if (!value) {
//     return (
//       <div className="alert alert-danger" role="alert">
//         This field is required!
//       </div>
//     );
//   }
// };

// const email = value => {
//   if (!isEmail(value)) {
//     return (
//       <div className="alert alert-danger" role="alert">
//         This is not a valid email.
//       </div>
//     );
//   }
// };

// const descriptionValidation = value => {
//   if (!value.length < 50) {
//     return (
//       <div className="alert alert-danger" role="alert">
//         The Description must not Exceed 50 Characters
//       </div>
//     );
//   }
// };

// const vpassword = value => {
//   if (value.length < 6 || value.length > 40) {
//     return (
//       <div className="alert alert-danger" role="alert">
//         The password must be between 6 and 40 characters.
//       </div>
//     );
//   }
// };

export default class Register extends Component {

  constructor(props) {
    super(props);
    this.handleRegister = this.handleRegister.bind(this);
    this.onChangeFirstName = this.onChangeFirstName.bind(this);
    this.onChangeLastName = this.onChangeLastName.bind(this);
    this.onChangeAddress = this.onChangeAddress.bind(this);
    this.onChangeLG = this.onChangeLG.bind(this);
    this.onChangeState = this.onChangeState.bind(this);
    this.onChangeUsername = this.onChangeUsername.bind(this);
    this.onChangeEmail = this.onChangeEmail.bind(this);
    this.onChangePassword = this.onChangePassword.bind(this);
    this.onChangeDob = this.onChangeDob.bind(this);
    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);


    this.state = {
      first_name: "",
      last_name: "",
      address: "",
      lga: "",
      state: "",
      username: "",
      dob: "",
      email: "",
      password: "",
      phone_number: "",
      successful: false,
      message: ""
    };
  }



  componentDidMount() {
    const script = document.createElement("script");

    script.src = "./assets/dist/assets/js/pages/custom/wizard/wizard-1.js";
    script.async = true;


    document.body.appendChild(script);
  }


  onChangeFirstName(e) {
    this.setState({
      first_name: e.target.value
    });
  }
  onChangeLastName(e) {
    this.setState({
      last_name: e.target.value
    });
  }
  onChangeAddress(e) {
    this.setState({
      address: e.target.value
    });
  }
  onChangeLG(e) {
    this.setState({
      lga: e.target.value
    });
  }
  onChangeState(e) {
    this.setState({
      state: e.target.value
    });
  }

  onChangeUsername(e) {
    this.setState({
      username: e.target.value
    });
  }

  onChangeEmail(e) {
    this.setState({
      email: e.target.value
    });
  }

  onChangePassword(e) {
    this.setState({
      password: e.target.value
    });
  }
  onChangeDob(e) {
    this.setState({
      dob: e.target.value
    });
  }
  onChangePhoneNumber(e) {
    this.setState({
      phone_number: e.target.value
    });
  }

  handleRegister(e) {
    e.preventDefault();

    this.setState({
      message: "",
      successful: false
    });

    this.form.validateAll();

    if (this.checkBtn.context._errors.length === 0) {
      AuthLogin.createNewUser(
        this.state.first_name,
        this.state.last_name,
        this.state.address,
        this.state.lga,
        this.state.state,
        this.state.username,
        this.state.dob,
        this.state.email,
        this.state.password,
        this.state.phone_number,
      ).then(
        response => {
          this.setState({
            message: response.data.detail,
            successful: true
          });
          window.location = "/AllProjects"
        },

        error => {
          const resMessage =
            (error.response &&
              error.response.data &&
              error.response.data.message) ||
            error.message ||
            error.toString();

          this.setState({
            successful: false,
            message: resMessage,
            loading: false
          });
        }
      );
    }
  }
  render() {



    const { loading } = this.state;

    // if (this.state.redirectToReferrer) {
    //     return (<Redirect to={'/dashboard'} />)
    // }

    // if (sessionStorage.getItem('token')) {
    //     return (<Redirect to={'/dashboard'} />)
    // }

    return (

      <div>
        {/*begin::Main*/}

        <div className="d-flex flex-column flex-root">
          {/*begin::Page*/}
          <div className="d-flex flex-row flex-column-fluid page">
            {/*begin::Wrapper*/}
            <div className="d-flex flex-column flex-row-fluid wrapper" id="kt_wrapper">

              {/*begin::Content*/}
              <div className="content d-flex flex-column flex-column-fluid" id="kt_content">

                {/*begin::Entry*/}
                <div className="d-flex flex-column-fluid">
                  {/*end::Card*/}
                  {/*begin::Container*/}
                  <div className="container">

                    <div className="card card-custom">
                      <div className="card-body p-0">
                        {/*begin::Wizard*/}
                        <div className="wizard wizard-1" id="kt_wizard" data-wizard-state="step-first" data-wizard-clickable="false">
                          {/*begin::Wizard Nav*/}
                          <div className="wizard-nav border-bottom">
                            <div className="wizard-steps p-8 p-lg-10">
                              {/*begin::Wizard Step 1 Nav*/}
                              <div className="wizard-step" data-wizard-type="step" data-wizard-state="current">
                                <div className="wizard-label">
                                  <i className="wizard-icon flaticon-list" />
                                  <h3 className="wizard-title">1. Setup Project Details</h3>
                                </div>
                                <span className="svg-icon svg-icon-xl wizard-arrow">
                                  {/*begin::Svg Icon | path:assets/media/svg/icons/Navigation/Arrow-right.svg*/}
                                  <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                    <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                      <polygon points="0 0 24 0 24 24 0 24" />
                                      <rect fill="#000000" opacity="0.3" transform="translate(12.000000, 12.000000) rotate(-90.000000) translate(-12.000000, -12.000000)" x={11} y={5} width={2} height={14} rx={1} />
                                      <path d="M9.70710318,15.7071045 C9.31657888,16.0976288 8.68341391,16.0976288 8.29288961,15.7071045 C7.90236532,15.3165802 7.90236532,14.6834152 8.29288961,14.2928909 L14.2928896,8.29289093 C14.6714686,7.914312 15.281055,7.90106637 15.675721,8.26284357 L21.675721,13.7628436 C22.08284,14.136036 22.1103429,14.7686034 21.7371505,15.1757223 C21.3639581,15.5828413 20.7313908,15.6103443 20.3242718,15.2371519 L15.0300721,10.3841355 L9.70710318,15.7071045 Z" fill="#000000" fillRule="nonzero" transform="translate(14.999999, 11.999997) scale(1, -1) rotate(90.000000) translate(-14.999999, -11.999997)" />
                                    </g>
                                  </svg>
                                  {/*end::Svg Icon*/}
                                </span>
                              </div>
                              {/*begin::Wizard Step 4 Nav*/}
                              <div className="wizard-step" data-wizard-type="step">
                                <div className="wizard-label">
                                  <i className="wizard-icon flaticon-truck" />
                                  <h3 className="wizard-title">2. Project Duration</h3>
                                </div>
                                <span className="svg-icon svg-icon-xl wizard-arrow">
                                  {/*begin::Svg Icon | path:assets/media/svg/icons/Navigation/Arrow-right.svg*/}
                                  <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                    <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                      <polygon points="0 0 24 0 24 24 0 24" />
                                      <rect fill="#000000" opacity="0.3" transform="translate(12.000000, 12.000000) rotate(-90.000000) translate(-12.000000, -12.000000)" x={11} y={5} width={2} height={14} rx={1} />
                                      <path d="M9.70710318,15.7071045 C9.31657888,16.0976288 8.68341391,16.0976288 8.29288961,15.7071045 C7.90236532,15.3165802 7.90236532,14.6834152 8.29288961,14.2928909 L14.2928896,8.29289093 C14.6714686,7.914312 15.281055,7.90106637 15.675721,8.26284357 L21.675721,13.7628436 C22.08284,14.136036 22.1103429,14.7686034 21.7371505,15.1757223 C21.3639581,15.5828413 20.7313908,15.6103443 20.3242718,15.2371519 L15.0300721,10.3841355 L9.70710318,15.7071045 Z" fill="#000000" fillRule="nonzero" transform="translate(14.999999, 11.999997) scale(1, -1) rotate(90.000000) translate(-14.999999, -11.999997)" />
                                    </g>
                                  </svg>
                                  {/*end::Svg Icon*/}
                                </span>
                              </div>
                              {/*end::Wizard Step 4 Nav*/}

                              {/*begin::Wizard Step 5 Nav*/}
                              <div className="wizard-step" data-wizard-type="step">
                                <div className="wizard-label">
                                  <i className="wizard-icon flaticon-globe" />
                                  <h3 className="wizard-title">3. review & submit </h3>
                                </div>
                                <span className="svg-icon svg-icon-xl wizard-arrow last">
                                  {/*begin::Svg Icon | path:assets/media/svg/icons/Navigation/Arrow-right.svg*/}
                                  <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                    <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                      <polygon points="0 0 24 0 24 24 0 24" />
                                      <rect fill="#000000" opacity="0.3" transform="translate(12.000000, 12.000000) rotate(-90.000000) translate(-12.000000, -12.000000)" x={11} y={5} width={2} height={14} rx={1} />
                                      <path d="M9.70710318,15.7071045 C9.31657888,16.0976288 8.68341391,16.0976288 8.29288961,15.7071045 C7.90236532,15.3165802 7.90236532,14.6834152 8.29288961,14.2928909 L14.2928896,8.29289093 C14.6714686,7.914312 15.281055,7.90106637 15.675721,8.26284357 L21.675721,13.7628436 C22.08284,14.136036 22.1103429,14.7686034 21.7371505,15.1757223 C21.3639581,15.5828413 20.7313908,15.6103443 20.3242718,15.2371519 L15.0300721,10.3841355 L9.70710318,15.7071045 Z" fill="#000000" fillRule="nonzero" transform="translate(14.999999, 11.999997) scale(1, -1) rotate(90.000000) translate(-14.999999, -11.999997)" />
                                    </g>
                                  </svg>
                                  {/*end::Svg Icon*/}
                                </span>
                              </div>
                              {/*end::Wizard Step 5 Nav*/}

                              <div className="wizard-step" data-wizard-type="step">

                              </div>
                            </div>
                          </div>
                          {/*end::Wizard Nav*/}
                          {/*begin::Wizard Body*/}
                          <div className="row justify-content-center my-10 px-8 my-lg-15 px-lg-10">
                            <div className="col-xl-12 col-xxl-7">
                              {/*begin::Wizard Form*/}                      

                              <Form onSubmit={this.handleRegister} ref={c => { this.form = c; }} className="form" id="kt_form">

                                {!this.state.successful && (
                                  <div>
                                    {/*begin::Wizard Step 1*/}
                                    <div className="pb-5" data-wizard-type="step-content" data-wizard-state="current">
                                      <h3 className="mb-10 font-weight-bold text-dark">Setup Your Account </h3>
                                      {/*begin::Input*/}
                                      <div className="form-group">
                                        <label className="font-size-h6 font-weight-bolder text-dark">First Name</label>
                                        <Input 
                                        type="text" className="form-control form-control-solid form-control-lg"

                                        name="firstname"
                                        value={this.state.first_name}
                                        onChange={this.onChangeFirstName}
                                        validations={[required]} />
                                       
                                        <span className="form-text text-muted">Please enter Project Name.</span>
                                      </div>

                                      {/*end::Input*/}
                                      {/*begin::Input*/}
                                      <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Last Name</label>
                                <Input name="lastname"
                                  value={this.state.last_name}
                                  onChange={this.onChangeLastName}
                                  validations={[required]} 
                                  type="text" className="form-control form-control-solid form-control-lg"
                                  placeholder="Last Name" defaultValue />
                              </div>
                              <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Address</label>
                                <Textarea name="address"
                                  value={this.state.address}
                                  onChange={this.onChangeAddress}
                                  validations={[required]} type="text" 
                                  className="form-control form-control-solid form-control-lg" placeholder="Address" />
                              </div>
                                      {/*end::Input*/}
                                      <div className="row">
                                <div className="col-lg-12 col-md-6">
                                  {/*end::Form Group*/}
                                  <div className="form-group">
                                    <label className="font-size-h6 font-weight-bolder text-dark">State</label>
                                    <select value={this.state.state}
                                      onChange={this.onChangeState}
                                      validations={[required]}  className="form-control form-control-solid form-control-lg">
                                      <option value>Select</option>
                                      <option value="ABUJA">ABUJA FCT</option>
                                      <option value="ABIA">ABIA</option>
                                      <option value="ADAMAWA">ADAMAWA</option>
                                      <option value="AKWA IBOM">AKWA IBOM</option>
                                      <option value="ANAMBRA">ANAMBRA</option>
                                      <option value="BAUCHI">BAUCHI</option>
                                      <option value="BAYELSA">BAYELSA</option>
                                      <option value="BENUE">BENUE</option>
                                      <option value="BORNO">BORNO</option>
                                      <option value="CROSS RIVER">CROSS RIVER</option>
                                      <option value="DELTA">DELTA</option>
                                      <option value="EBONYI">EBONYI</option>
                                      <option value="EDO">EDO</option>
                                      <option value="EKITI">EKITI</option>
                                      <option value="ENUGU">ENUGU</option>
                                      <option value="GOMBE">GOMBE</option>
                                      <option value="IMO">IMO</option>
                                      <option value="JIGAWA">JIGAWA</option>
                                      <option value="KADUNA">KADUNA</option>
                                      <option value="KANO">KANO</option>
                                      <option value="KATSINA">KATSINA</option>
                                      <option value="KEBBI">KEBBI</option>
                                      <option value="KOGI">KOGI</option>
                                      <option value="KWARA">KWARA</option>
                                      <option value="LAGOS">LAGOS</option>
                                      <option value="NASSARAWA">NASSARAWA</option>
                                      <option value="NIGER">NIGER</option>
                                      <option value="OGUN">OGUN</option>
                                      <option value="ONDO">ONDO</option>
                                      <option value="OSUN">OSUN</option>
                                      <option value="OYO">OYO</option>
                                      <option value="PLATEAU">PLATEAU</option>
                                      <option value="RIVERS">RIVERS</option>
                                      <option value="SOKOTO">SOKOTO</option>
                                      <option value="TARABA">TARABA</option>
                                      <option value="YOBE">YOBE</option>
                                      <option value="ZAMFARA">ZAMFARA</option>
                                    </select>
                                  </div>
                                  {/*end::Form Group*/}
                                </div>
                              </div>
                              

                                      <div className="row">

                                        <div className="col-xl-12">
                                          {/*begin::Select*/}
                                          <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">LG</label>
                                <Input name="lga"
                                  value={this.state.lga}
                                  onChange={this.onChangeLG}
                                  validations={[required]} type="text" className="form-control form-control-solid form-control-lg" placeholder="LG" />
                              </div>

                              
                                          {/*end::Select*/}
                                        </div>
                                        {/*end::Form Group*/}

                                        {/*end::Form Group*/}
                                      </div>
                                    </div>
                                    {/*end::Wizard Step 1*/}

                                    {/*begin::Wizard Step 3*/}
                                    <div className="pb-5" data-wizard-type="step-content">
                                      {/* <h4 className="mb-10 font-weight-bold text-dark">Select your Services</h4> */}
                                      {/*begin::Select*/}
                                      <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Username</label>
                                <Input name="username"
                                  value={this.state.username}
                                  onChange={this.onChangeUsername}
                                  validations={[required]} type="text" className="form-control form-control-solid form-control-lg" placeholder="username" />
                              </div>
                              <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Password</label>
                                <Input name="password"
                                  value={this.state.password}
                                  onChange={this.onChangePassword}
                                  validations={[required]} type="password" className="form-control form-control-solid form-control-lg" placeholder="password" />
                              </div>
                              {/*begin::Form Group*/}
                              <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Email</label>
                                <Input name="email"
                                  value={this.state.email}
                                  onChange={this.onChangeEmail}
                                  validations={[required]} type="email" className="form-control form-control-solid form-control-lg" placeholder="Email" />
                              </div>

                              {/*begin::Form Group*/}
                              {/*end::Row*/}
                              <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Phone Number</label>
                                <Input name="phonenumber"
                                  value={this.state.phone_number}
                                  onChange={this.onChangePhoneNumber}
                                  validations={[required]} type="text" className="form-control form-control-solid form-control-lg" placeholder="phone number" />
                              </div>
                              <div className="form-group">
                                <label className="font-size-h6 font-weight-bolder text-dark">Date of Birth</label>
                                <Input name="dob"
                                  value={this.state.dob}
                                  onChange={this.onChangeDob}
                                  validations={[required]} type="text" className="form-control form-control-solid form-control-lg" placeholder="YYYY-MM-DD" />
                              </div>


                                    </div>
                                    {/*end::Wizard Step 3*/}

                                    {/*begin::Wizard Step 5*/}
                                    <div className="pb-5" data-wizard-type="step-content">
                              {/*begin::Title*/}
                              <div className="pb-10 pb-lg-15">
                                <h3 className="font-weight-bolder text-dark font-size-h2">Complete</h3>
                                <div className="text-muted font-weight-bold font-size-h4">Complete Your Signup And Become A Member!</div>
                              </div>
                              {/*end::Title*/}
                              {/*begin::Section*/}
                              <h2 className="font-weight-bolder mb-3">Accoun Settings:</h2>
                              <div className="text-dark-50 font-weight-bold line-height-lg mb-8">
                                <div><h3>First Name: </h3></div>
                                <div ><h4>{this.state.first_name} </h4></div>
                                <div><h3>Last Name:</h3> </div>
                                <div ><h4>{this.state.last_name} </h4></div>
                                <div><h3>State:</h3> </div>
                                <div ><h4>{this.state.state} </h4></div>
                                <div><h3>LG:</h3> </div>
                                <div ><h4>{this.state.lga} </h4></div>
                                <div><h3>Address:</h3> </div>
                                <div ><h4>{this.state.address} </h4></div>
                              </div>
                              {/*end::Section*/}
                              {/*begin::Section*/}
                              <h2 className="font-weight-bolder mb-3">Account Details:</h2>
                              <div className="text-dark-50 font-weight-bold line-height-lg mb-8">
                                <div><h3>Username: </h3></div>
                                <div ><h4>{this.state.username} </h4></div>
                                <div><h3>Password: </h3></div>
                                <div ><h4>{this.state.password} </h4></div>
                                <div><h3>Email:</h3> </div>
                                <div ><h4>{this.state.email} </h4></div>
                                <div><h3>Phone Number: </h3></div>
                                <div ><h4>{this.state.phone_number} </h4></div>
                                <div><h3>Date of Birth: </h3></div>
                                <div ><h4>{this.state.dob} </h4></div>
                              </div>
                              {/*end::Section*/}
                              {/*begin::Section*/}
                              {/* <h4 className="font-weight-bolder mb-3">Support Channels:</h4>
                  
                                    <div className="pb-5" data-wizard-type="step-content">
                                      {/*begin::Section*/}
                                     
                                    </div>

                                    {/*end::Wizard Step 5*/}
                                    {/*begin::Wizard Step 5*/}


                                  </div>
                                )}  
                                <center> 
       
                                  
                                  {this.state.message && (
                                  
                                  <div className="pb-5" >
                                    <div
                                      className={
                                        this.state.successful
                                          ? "alert alert-custom alert-outline-success fade show mb-5"
                                          : "alert alert-custom alert-outline-danger fade show mb-5"
                                      }
                                      role="alert"
                                    >
                                      {this.state.message}
                                    </div>
                                  </div>
                                )}</center>

                                <div className="d-flex justify-content-between border-top mt-5 pt-10">
                                  <div className="mr-2">
                                    <button type="button" className="btn btn-light-primary font-weight-bolder text-uppercase px-9 py-4" data-wizard-type="action-prev">Previous</button>
                                  </div>
                                  <div>

                                    <button type="button" className="btn btn-primary font-weight-bolder text-uppercase px-9 py-4" data-wizard-type="action-next">Next</button>
                                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                      

                                          <button id="kt_login_singin_form_submit_button"
                                          className="btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-3"
                                          data-wizard-type="step-content"
                                          disabled={this.state.loading}
    
                                        >
                                          {this.state.loading && (
                                                    <center><Spinner animation="border" variant="primary" /></center>
                                                    )}
                                          <span>Register</span>
                                        </button>
                                          

                                    {/* <Modal show={this.state.show} onHide={this.handleClose}>
                                      <Modal.Header closeButton>
                                        <Modal.Title>Modal heading</Modal.Title>
                                      </Modal.Header>
                                      <Modal.Body> {this.state.message}</Modal.Body>
                                      <Modal.Footer>
                                        <Button variant="secondary" onClick={this.handleClose}>
                                          Close
                                      </Button>
                                        <Button variant="primary" onClick={this.handleClose}>
                                          Save Changes
                                     </Button>
                                       </Modal.Footer>
                                    </Modal> */}





                                    <CheckButton
                                      style={{ display: "none" }}
                                      ref={c => {
                                        this.checkBtn = c;
                                      }}
                                    />
                                  </div>
                                </div>

                                {/*end::Wizard Actions*/}
                              </Form>

                              {/*end::Wizard Form*/}
                            </div>
                          </div>
                          {/*end::Wizard Body*/}
                        </div>
                        {/*end::Wizard*/}
                      </div>
                      {/*end::Wizard*/}
                    </div>
                  </div>
                  {/*end::Container*/}
                </div>
                {/*end::Entry*/}
              </div>
              {/*end::Content*/}
            </div>
            {/*end::Wrapper*/}
          </div>
          {/*end::Page*/}
        </div>
        {/*end::Main*/}

      </div>

    );
  }
}












import React, { Component, useState, useEffect } from "react";
import { Redirect, Link } from 'react-router-dom';
import Header from './Header';
import Footer from './Footer'
import Menu_Aside from "./Menu_Aside";
import axios from "axios";
import Spinner from 'react-bootstrap/Spinner'



const Dashboard = () => {
  const [projects, setProjects] = useState([]);
  const [myloading, setLoading] = useState([false]);
  const [tasks, setTask] = useState([]);


  const TotalTask = () => {
    const username = 'admin'
    const password = 'Pass@1234'
    const token = Buffer.from(`${username}:${password}`, 'utf8').toString('base64')

    axios.get("https://ecological1.chinikiguard.com/projects/api/tasks/list/?all_record=1",
      {
        headers:
        {
          'Authorization': `Basic ${token}`,
          'Access-Control-Allow-Origin': '*',
          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',
          'Access-Control-Allow-Credentials': true
        },

      })
      .then(res => {
        const tasks = res.data.length;
        setTask(tasks);
        setLoading(false)
        console.log(res);
        console.log(res.data.length);
        // window.location = "/dashboard"
      })

  }

  const TotalProject = () => {


    const username = 'admin'
    const password = 'Pass@1234'
    const token = Buffer.from(`${username}:${password}`, 'utf8').toString('base64')
    axios.get("https://ecological1.chinikiguard.com/projects/api/list/?all_record=1",
      {
        headers:
        {
          'Authorization': `Basic ${token}`,
          'Access-Control-Allow-Origin': '*',
          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',
          'Access-Control-Allow-Credentials': true
        },

      })
      .then(res => {
        const projects = res.data.length;
        setProjects(projects);
        setLoading(false)
        console.log(res);
        console.log(res.data.length);
        // window.location = "/dashboard"
      })

  }

  useEffect(() => {
    //start js style
    const script = document.createElement("script");
    script.src = "./assets/dist/assets/js/pages/widgets.js";
    script.async = true;
    document.body.appendChild(script);
    //end js stye
    TotalProject();
    TotalTask();




  }, []);

  return (
    // if (localStorage.getItem('user')) {
    //     return (<Redirect to={'/dashboard'} />)
    // }


    <div>
      <Header />

      <div className="d-flex flex-column flex-root">
        {/*begin::Page*/}
        <div className="d-flex flex-row flex-column-fluid page">
          {/*begin::Wrapper*/}
          <div className="d-flex flex-column flex-row-fluid wrapper" id="kt_wrapper">
            {/*begin::Content*/}
            <div className="content d-flex flex-column flex-column-fluid" id="kt_content">

              {/*begin::Entry*/}
              <div className="d-flex flex-column-fluid">
                <Menu_Aside />
                {/*begin::Container*/}
                <div className="container">

                  <div className="row">
                    <div className="col-xl-2">
                      {/*begin::Stats Widget 25*/}
                      <div className="card card-custom bg-green card-stretch gutter-b">
                        {/*begin::Body*/}
                        <div className="card-body">
                          <span className="svg-icon svg-icon-2x svg-icon-success">
                            {/*begin::Svg Icon | path:assets/media/svg/icons/Communication/Mail-opened.svg*/}
                            <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                              <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                <rect x={0} y={0} width={24} height={24} />
                                <path d="M6,2 L18,2 C18.5522847,2 19,2.44771525 19,3 L19,12 C19,12.5522847 18.5522847,13 18,13 L6,13 C5.44771525,13 5,12.5522847 5,12 L5,3 C5,2.44771525 5.44771525,2 6,2 Z M7.5,5 C7.22385763,5 7,5.22385763 7,5.5 C7,5.77614237 7.22385763,6 7.5,6 L13.5,6 C13.7761424,6 14,5.77614237 14,5.5 C14,5.22385763 13.7761424,5 13.5,5 L7.5,5 Z M7.5,7 C7.22385763,7 7,7.22385763 7,7.5 C7,7.77614237 7.22385763,8 7.5,8 L10.5,8 C10.7761424,8 11,7.77614237 11,7.5 C11,7.22385763 10.7761424,7 10.5,7 L7.5,7 Z" fill="#000000" opacity="0.3" />
                                <path d="M3.79274528,6.57253826 L12,12.5 L20.2072547,6.57253826 C20.4311176,6.4108595 20.7436609,6.46126971 20.9053396,6.68513259 C20.9668779,6.77033951 21,6.87277228 21,6.97787787 L21,17 C21,18.1045695 20.1045695,19 19,19 L5,19 C3.8954305,19 3,18.1045695 3,17 L3,6.97787787 C3,6.70173549 3.22385763,6.47787787 3.5,6.47787787 C3.60510559,6.47787787 3.70753836,6.51099993 3.79274528,6.57253826 Z" fill="#000000" />
                              </g>
                            </svg>
                            {/*end::Svg Icon*/}
                          </span>
                          <span className="card-title font-weight-bolder text-dark-75 font-size-h2 mb-0 mt-6 d-block">$5,209</span>
                          <span className="font-weight-bold text-muted font-size-sm">SAP UI Progress</span>
                        </div>
                        {/*end::Body*/}
                      </div>
                      {/*end::Stats Widget 25*/}
                    </div>
                    <div className="col-xl-2">
                      
                      {/*begin::Stats Widget 26*/}
                      <div className="card card-custom bg-green card-stretch gutter-b">
                        {/*begin::ody*/}
                        <div className="card-body">
                          <span className="svg-icon svg-icon-2x svg-icon-danger">
                            {/*begin::Svg Icon | path:assets/media/svg/icons/Communication/Group.svg*/}
                            <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                              <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                <polygon points="0 0 24 0 24 24 0 24" />
                                <path d="M18,14 C16.3431458,14 15,12.6568542 15,11 C15,9.34314575 16.3431458,8 18,8 C19.6568542,8 21,9.34314575 21,11 C21,12.6568542 19.6568542,14 18,14 Z M9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 Z" fill="#000000" fillRule="nonzero" opacity="0.3" />
                                <path d="M17.6011961,15.0006174 C21.0077043,15.0378534 23.7891749,16.7601418 23.9984937,20.4 C24.0069246,20.5466056 23.9984937,21 23.4559499,21 L19.6,21 C19.6,18.7490654 18.8562935,16.6718327 17.6011961,15.0006174 Z M0.00065168429,20.1992055 C0.388258525,15.4265159 4.26191235,13 8.98334134,13 C13.7712164,13 17.7048837,15.2931929 17.9979143,20.2 C18.0095879,20.3954741 17.9979143,21 17.2466999,21 C13.541124,21 8.03472472,21 0.727502227,21 C0.476712155,21 -0.0204617505,20.45918 0.00065168429,20.1992055 Z" fill="#000000" fillRule="nonzero" />
                              </g>
                            </svg>
                            {/*end::Svg Icon*/}
                          </span>
                          <span className="card-title font-weight-bolder text-dark-75 font-size-h2 mb-0 mt-6 d-block">2,044</span>
                          <span className="font-weight-bold text-muted font-size-sm">New Customers</span>
                        </div>
                        {/*end::Body*/}
                      </div>
                      {/*end::Stats Widget 26*/}
                    </div>
                    <div className="col-xl-2">
                      {/*begin::Stats Widget 27*/}
                      <div className="card card-custom bg-green card-stretch gutter-b">
                        {/*begin::Body*/}
                        <div className="card-body">
                          <span className="svg-icon svg-icon-2x svg-icon-info">
                            {/*begin::Svg Icon | path:assets/media/svg/icons/Media/Equalizer.svg*/}
                            <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                              <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                <rect x={0} y={0} width={24} height={24} />
                                <rect fill="#000000" opacity="0.3" x={13} y={4} width={3} height={16} rx="1.5" />
                                <rect fill="#000000" x={8} y={9} width={3} height={11} rx="1.5" />
                                <rect fill="#000000" x={18} y={11} width={3} height={9} rx="1.5" />
                                <rect fill="#000000" x={3} y={13} width={3} height={7} rx="1.5" />
                              </g>
                            </svg>
                            {/*end::Svg Icon*/}
                          </span>
                          <span className="card-title font-weight-bolder text-dark-75 font-size-h2 mb-0 mt-6 d-block">$50,000</span>
                          <span className="font-weight-bold text-muted font-size-sm">Milestone Reached</span>
                        </div>
                        {/*end::Body*/}
                      </div>
                      {/*end::Stats Widget 27*/}
                    </div>

                    <div className="col-xl-2">
                      {/*begin::Stats Widget 27*/}
                      <div className="card card-custom bg-green card-stretch gutter-b">
                        {/*begin::Body*/}
                        <div className="card-body">
                          <span className="svg-icon svg-icon-2x svg-icon-info">
                            {/*begin::Svg Icon | path:assets/media/svg/icons/Media/Equalizer.svg*/}
                            <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                              <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                <rect x={0} y={0} width={24} height={24} />
                                <rect fill="#000000" opacity="0.3" x={13} y={4} width={3} height={16} rx="1.5" />
                                <rect fill="#000000" x={8} y={9} width={3} height={11} rx="1.5" />
                                <rect fill="#000000" x={18} y={11} width={3} height={9} rx="1.5" />
                                <rect fill="#000000" x={3} y={13} width={3} height={7} rx="1.5" />
                              </g>
                            </svg>
                            {/*end::Svg Icon*/}
                          </span>
                          <span className="card-title font-weight-bolder text-dark-75 font-size-h2 mb-0 mt-6 d-block">$50,000</span>
                          <span className="font-weight-bold text-muted font-size-sm">Milestone Reached</span>
                        </div>
                        {/*end::Body*/}
                      </div>
                      {/*end::Stats Widget 27*/}
                    </div>
                    <div className="col-xl-2">
                      {/*begin::Stats Widget 27*/}
                      <div className="card card-custom bg-green card-stretch gutter-b">
                        {/*begin::Body*/}
                        <div className="card-body">
                          <span className="svg-icon svg-icon-2x svg-icon-info">
                            {/*begin::Svg Icon | path:assets/media/svg/icons/Media/Equalizer.svg*/}
                            <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                              <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                <rect x={0} y={0} width={24} height={24} />
                                <rect fill="#000000" opacity="0.3" x={13} y={4} width={3} height={16} rx="1.5" />
                                <rect fill="#000000" x={8} y={9} width={3} height={11} rx="1.5" />
                                <rect fill="#000000" x={18} y={11} width={3} height={9} rx="1.5" />
                                <rect fill="#000000" x={3} y={13} width={3} height={7} rx="1.5" />
                              </g>
                            </svg>
                            {/*end::Svg Icon*/}
                          </span>
                          <span className="card-title font-weight-bolder text-dark-75 font-size-h2 mb-0 mt-6 d-block">$50,000</span>
                          <span className="font-weight-bold text-muted font-size-sm">Milestone Reached</span>
                        </div>
                        {/*end::Body*/}
                      </div>
                      {/*end::Stats Widget 27*/}
                    </div>
                   

                    <div className="col-xl-2">
                      {/*begin::Stats Widget 28*/}
                      <div className="card card-custom bg-green card-stretch gutter-b">
                        {/*begin::Body*/}
                        <div className="card-body">
                          <span className="svg-icon svg-icon-2x svg-icon-warning">
                            {/*begin::Svg Icon | path:assets/media/svg/icons/Communication/Group-chat.svg*/}
                            <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                              <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                <rect x={0} y={0} width={24} height={24} />
                                <path d="M16,15.6315789 L16,12 C16,10.3431458 14.6568542,9 13,9 L6.16183229,9 L6.16183229,5.52631579 C6.16183229,4.13107011 7.29290239,3 8.68814808,3 L20.4776218,3 C21.8728674,3 23.0039375,4.13107011 23.0039375,5.52631579 L23.0039375,13.1052632 L23.0206157,17.786793 C23.0215995,18.0629336 22.7985408,18.2875874 22.5224001,18.2885711 C22.3891754,18.2890457 22.2612702,18.2363324 22.1670655,18.1421277 L19.6565168,15.6315789 L16,15.6315789 Z" fill="#000000" />
                                <path d="M1.98505595,18 L1.98505595,13 C1.98505595,11.8954305 2.88048645,11 3.98505595,11 L11.9850559,11 C13.0896254,11 13.9850559,11.8954305 13.9850559,13 L13.9850559,18 C13.9850559,19.1045695 13.0896254,20 11.9850559,20 L4.10078614,20 L2.85693427,21.1905292 C2.65744295,21.3814685 2.34093638,21.3745358 2.14999706,21.1750444 C2.06092565,21.0819836 2.01120804,20.958136 2.01120804,20.8293182 L2.01120804,18.32426 C1.99400175,18.2187196 1.98505595,18.1104045 1.98505595,18 Z M6.5,14 C6.22385763,14 6,14.2238576 6,14.5 C6,14.7761424 6.22385763,15 6.5,15 L11.5,15 C11.7761424,15 12,14.7761424 12,14.5 C12,14.2238576 11.7761424,14 11.5,14 L6.5,14 Z M9.5,16 C9.22385763,16 9,16.2238576 9,16.5 C9,16.7761424 9.22385763,17 9.5,17 L11.5,17 C11.7761424,17 12,16.7761424 12,16.5 C12,16.2238576 11.7761424,16 11.5,16 L9.5,16 Z" fill="#000000" opacity="0.3" />
                              </g>
                            </svg>
                            {/*end::Svg Icon*/}
                          </span>
                          <span className="card-title font-weight-bolder text-dark-75 font-size-h2 mb-0 mt-6 d-block">23,508</span>
                          <span className="font-weight-bold text-muted font-size-sm">23,508</span>
                        </div>
                        {/*end::Body*/}
                      </div>
                      {/*end::Stat: Widget 28*/}
                    </div>
                  </div>


                  <div className="row">
                    <div className="col-xl-4">
                      {/*begin::Stats Widget 22*/}
                      <div className="card card-custom bgi-no-repeat card-stretch gutter-b" style={{ backgroundPosition: 'right top', backgroundSize: '30% auto', backgroundImage: 'url(assets/media/svg/shapes/abstract-3.svg)' }}>
                        {/*begin::Body*/}
                        <div className="card-body my-4">
                          <a href="#" className="card-title font-weight-bolder text-info font-size-h6 mb-4 text-hover-state-dark d-block">SAP UI Progress</a>
                          <div className="font-weight-bold text-muted font-size-sm">
                            <span className="text-dark-75 font-weight-bolder font-size-h2 mr-2">67%</span>Avarage</div>
                          <div className="progress progress-xs mt-7 bg-info-o-60">
                            <div className="progress-bar bg-info" role="progressbar" style={{ width: '67%' }} aria-valuenow={50} aria-valuemin={0} aria-valuemax={100} />
                          </div>
                        </div>
                        {/*end::Body*/}
                      </div>
                      {/*end::Stats Widget 22*/}
                    </div>
                    <div className="col-xl-4">
                      {/*begin::Stats Widget 23*/}
                      <div className="card card-custom bg-info card-stretch gutter-b">
                        {/*begin::Body*/}
                        <div className="card-body my-4">
                          <a href="#" className="card-title font-weight-bolder text-white font-size-h6 mb-4 text-hover-state-dark d-block">Airplus Budget</a>
                          <div className="font-weight-bold text-white font-size-sm">
                            <span className="font-size-h2 mr-2">87K%</span>23k to goal</div>
                          <div className="progress progress-xs mt-7 bg-white-o-90">
                            <div className="progress-bar bg-white" role="progressbar" style={{ width: '87%' }} aria-valuenow={50} aria-valuemin={0} aria-valuemax={100} />
                          </div>
                        </div>
                        {/*end::Body*/}
                      </div>
                      {/*end::Stats Widget 23*/}
                    </div>
                    <div className="col-xl-4">
                      {/*begin::Stats Widget 24*/}
                      <div className="card card-custom bg-dark card-stretch gutter-b">
                        {/*begin::Body*/}
                        <div className="card-body my-4">
                          <a href="#" className="card-title font-weight-bolder text-white font-size-h6 mb-4 text-hover-state-dark d-block">Customer</a>
                          <div className="font-weight-bold text-white font-size-sm">
                            <span className="font-size-h2 mr-2">52,450</span>48k to goal</div>
                          <div className="progress progress-xs mt-7 bg-white-o-90">
                            <div className="progress-bar bg-white" role="progressbar" style={{ width: '52%' }} aria-valuenow={50} aria-valuemin={0} aria-valuemax={100} />
                          </div>
                        </div>
                        {/*end::Body*/}
                      </div>
                      {/*end::Stats: Widget 24*/}
                    </div>
                  </div>

                  <div className="row">
                    <div className="col-xl-4">
                      {/*begin::Mixed Widget 2*/}
                      <div className="card card-custom bg-gray-100 gutter-b card-stretch">
                        {/*begin::Header*/}
                        <div className="card-header border-0 bg-primary py-5">
                          <h3 className="card-title font-weight-bolder text-white">Projects Stat</h3>
                          <div className="card-toolbar">
                            <div className="dropdown dropdown-inline">
                              <a href="#" className="btn btn-transparent-white btn-sm font-weight-bolder dropdown-toggle px-5" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Export</a>
                              <div className="dropdown-menu dropdown-menu-sm dropdown-menu-right">
                                {/*begin::Navigation*/}
                                <ul className="navi navi-hover">
                                  <li className="navi-header pb-1">
                                    <span className="text-primary text-uppercase font-weight-bold font-size-sm">Add new:</span>
                                  </li>
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-icon">
                                        <i className="flaticon2-shopping-cart-1" />
                                      </span>
                                      <span className="navi-text">Order</span>
                                    </a>
                                  </li>
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-icon">
                                        <i className="flaticon2-calendar-8" />
                                      </span>
                                      <span className="navi-text">Event</span>
                                    </a>
                                  </li>
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-icon">
                                        <i className="flaticon2-graph-1" />
                                      </span>
                                      <span className="navi-text">Report</span>
                                    </a>
                                  </li>
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-icon">
                                        <i className="flaticon2-rocket-1" />
                                      </span>
                                      <span className="navi-text">Post</span>
                                    </a>
                                  </li>
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-icon">
                                        <i className="flaticon2-writing" />
                                      </span>
                                      <span className="navi-text">File</span>
                                    </a>
                                  </li>
                                </ul>
                                {/*end::Navigation*/}
                              </div>
                            </div>
                          </div>
                        </div>
                        {/*end::Header*/}
                        {/*begin::Body*/}
                        <div className="card-body p-0 position-relative overflow-hidden">
                          {/*begin::Chart*/}
                          <div id="kt_mixed_widget_2_chart" className="card-rounded-bottom bg-primary" style={{ height: 200 }} />
                          {/*end::Chart*/}
                          {/*begin::Stats*/}
                          <div className="card-spacer mt-n25">
                            {/*begin::Row*/}
                            <div className="row m-0">
                              <div className="col bg-white px-6 py-8 rounded-xl mr-7 mb-7">
                                <span className="svg-icon svg-icon-3x svg-icon-info d-block my-2">
                                  {/*begin::Svg Icon | path:assets/media/svg/icons/Media/Equalizer.svg*/}
                                  <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                    <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                      <rect x={0} y={0} width={24} height={24} />
                                      <rect fill="#000000" opacity="0.3" x={13} y={4} width={3} height={16} rx="1.5" />
                                      <rect fill="#000000" x={8} y={9} width={3} height={11} rx="1.5" />
                                      <rect fill="#000000" x={18} y={11} width={3} height={9} rx="1.5" />
                                      <rect fill="#000000" x={3} y={13} width={3} height={7} rx="1.5" />
                                    </g>
                                  </svg>
                                  {/*end::Svg Icon*/}
                                </span>
                                <a href="#" className="text-info font-weight-bold font-size-h6">Daily  stats</a>
                              </div>
                              <div className="col bg-white px-6 py-8 rounded-xl mb-7">
                                <span className="svg-icon svg-icon-3x svg-icon-warning d-block my-2">
                                  {/*begin::Svg Icon | path:assets/media/svg/icons/Communication/Add-user.svg*/}
                                  <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                    <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                      <polygon points="0 0 24 0 24 24 0 24" />
                                      <path d="M18,8 L16,8 C15.4477153,8 15,7.55228475 15,7 C15,6.44771525 15.4477153,6 16,6 L18,6 L18,4 C18,3.44771525 18.4477153,3 19,3 C19.5522847,3 20,3.44771525 20,4 L20,6 L22,6 C22.5522847,6 23,6.44771525 23,7 C23,7.55228475 22.5522847,8 22,8 L20,8 L20,10 C20,10.5522847 19.5522847,11 19,11 C18.4477153,11 18,10.5522847 18,10 L18,8 Z M9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 Z" fill="#000000" fillRule="nonzero" opacity="0.3" />
                                      <path d="M0.00065168429,20.1992055 C0.388258525,15.4265159 4.26191235,13 8.98334134,13 C13.7712164,13 17.7048837,15.2931929 17.9979143,20.2 C18.0095879,20.3954741 17.9979143,21 17.2466999,21 C13.541124,21 8.03472472,21 0.727502227,21 C0.476712155,21 -0.0204617505,20.45918 0.00065168429,20.1992055 Z" fill="#000000" fillRule="nonzero" />
                                    </g>
                                  </svg>
                                  {/*end::Svg Icon*/}
                                </span>
                                <a href="#" className="text-warning font-weight-bold font-size-h6 mt-2">Weekly stats</a>
                              </div>
                            </div>
                            {/*end::Row*/}
                            {/*begin::Row*/}
                            <div className="row m-0">
                              <div className="col bg-white px-6 py-8 rounded-xl mr-7">
                                <span className="svg-icon svg-icon-3x svg-icon-danger d-block my-2">
                                  {/*begin::Svg Icon | path:assets/media/svg/icons/Design/Layers.svg*/}
                                  <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                    <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                      <polygon points="0 0 24 0 24 24 0 24" />
                                      <path d="M12.9336061,16.072447 L19.36,10.9564761 L19.5181585,10.8312381 C20.1676248,10.3169571 20.2772143,9.3735535 19.7629333,8.72408713 C19.6917232,8.63415859 19.6104327,8.55269514 19.5206557,8.48129411 L12.9336854,3.24257445 C12.3871201,2.80788259 11.6128799,2.80788259 11.0663146,3.24257445 L4.47482784,8.48488609 C3.82645598,9.00054628 3.71887192,9.94418071 4.23453211,10.5925526 C4.30500305,10.6811601 4.38527899,10.7615046 4.47382636,10.8320511 L4.63,10.9564761 L11.0659024,16.0730648 C11.6126744,16.5077525 12.3871218,16.5074963 12.9336061,16.072447 Z" fill="#000000" fillRule="nonzero" />
                                      <path d="M11.0563554,18.6706981 L5.33593024,14.122919 C4.94553994,13.8125559 4.37746707,13.8774308 4.06710397,14.2678211 C4.06471678,14.2708238 4.06234874,14.2738418 4.06,14.2768747 L4.06,14.2768747 C3.75257288,14.6738539 3.82516916,15.244888 4.22214834,15.5523151 C4.22358765,15.5534297 4.2250303,15.55454 4.22647627,15.555646 L11.0872776,20.8031356 C11.6250734,21.2144692 12.371757,21.2145375 12.909628,20.8033023 L19.7677785,15.559828 C20.1693192,15.2528257 20.2459576,14.6784381 19.9389553,14.2768974 C19.9376429,14.2751809 19.9363245,14.2734691 19.935,14.2717619 L19.935,14.2717619 C19.6266937,13.8743807 19.0546209,13.8021712 18.6572397,14.1104775 C18.654352,14.112718 18.6514778,14.1149757 18.6486172,14.1172508 L12.9235044,18.6705218 C12.377022,19.1051477 11.6029199,19.1052208 11.0563554,18.6706981 Z" fill="#000000" opacity="0.3" />
                                    </g>
                                  </svg>
                                  {/*end::Svg Icon*/}
                                </span>
                                <a href="#" className="text-danger font-weight-bold font-size-h6 mt-2">Monthly stats</a>
                              </div>
                              <div className="col bg-white px-6 py-8 rounded-xl">
                                <span className="svg-icon svg-icon-3x svg-icon-success d-block my-2">
                                  {/*begin::Svg Icon | path:assets/media/svg/icons/Communication/Urgent-mail.svg*/}
                                  <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                    <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                      <rect x={0} y={0} width={24} height={24} />
                                      <path d="M12.7037037,14 L15.6666667,10 L13.4444444,10 L13.4444444,6 L9,12 L11.2222222,12 L11.2222222,14 L6,14 C5.44771525,14 5,13.5522847 5,13 L5,3 C5,2.44771525 5.44771525,2 6,2 L18,2 C18.5522847,2 19,2.44771525 19,3 L19,13 C19,13.5522847 18.5522847,14 18,14 L12.7037037,14 Z" fill="#000000" opacity="0.3" />
                                      <path d="M9.80428954,10.9142091 L9,12 L11.2222222,12 L11.2222222,16 L15.6666667,10 L15.4615385,10 L20.2072547,6.57253826 C20.4311176,6.4108595 20.7436609,6.46126971 20.9053396,6.68513259 C20.9668779,6.77033951 21,6.87277228 21,6.97787787 L21,17 C21,18.1045695 20.1045695,19 19,19 L5,19 C3.8954305,19 3,18.1045695 3,17 L3,6.97787787 C3,6.70173549 3.22385763,6.47787787 3.5,6.47787787 C3.60510559,6.47787787 3.70753836,6.51099993 3.79274528,6.57253826 L9.80428954,10.9142091 Z" fill="#000000" />
                                    </g>
                                  </svg>
                                  {/*end::Svg Icon*/}
                                </span>
                                <a href="#" className="text-success font-weight-bold font-size-h6 mt-2">Annual stats</a>
                              </div>
                            </div>
                            {/*end::Row*/}
                          </div>
                          {/*end::Stats*/}
                        </div>
                        {/*end::Body*/}
                      </div>
                      {/*end::Mixed Widget 2*/}
                    </div>
                    <div className="col-xl-4">
                      {/*begin::Mixed Widget 18*/}
                      <div className="card card-custom gutter-b card-stretch">
                        {/*begin::Header*/}
                        <div className="card-header border-0 pt-5">
                          <div className="card-title font-weight-bolder">
                            <div className="card-label">Weekly Task Progress
            <div className="font-size-sm text-muted mt-2">890,344 task</div></div>
                          </div>
                          <div className="card-toolbar">
                            <div className="dropdown dropdown-inline">
                              <a href="#" className="btn btn-clean btn-sm btn-icon" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i className="ki ki-bold-more-hor" />
                              </a>
                              <div className="dropdown-menu dropdown-menu-md dropdown-menu-right">
                                {/*begin::Navigation*/}
                                <ul className="navi navi-hover">
                                  <li className="navi-header font-weight-bold py-4">
                                    <span className="font-size-lg">Choose Label:</span>
                                    <i className="flaticon2-information icon-md text-muted" data-toggle="tooltip" data-placement="right" title="Click to learn more..." />
                                  </li>
                                  <li className="navi-separator mb-3 opacity-70" />
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-text">
                                        <span className="label label-xl label-inline label-light-success">Customer</span>
                                      </span>
                                    </a>
                                  </li>
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-text">
                                        <span className="label label-xl label-inline label-light-danger">Partner</span>
                                      </span>
                                    </a>
                                  </li>
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-text">
                                        <span className="label label-xl label-inline label-light-warning">Suplier</span>
                                      </span>
                                    </a>
                                  </li>
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-text">
                                        <span className="label label-xl label-inline label-light-primary">Member</span>
                                      </span>
                                    </a>
                                  </li>
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-text">
                                        <span className="label label-xl label-inline label-light-dark">Staff</span>
                                      </span>
                                    </a>
                                  </li>
                                  <li className="navi-separator mt-3 opacity-70" />
                                  <li className="navi-footer py-4">
                                    <a className="btn btn-clean font-weight-bold btn-sm" href="#">
                                      <i className="ki ki-plus icon-sm" />Add new</a>
                                  </li>
                                </ul>
                                {/*end::Navigation*/}
                              </div>
                            </div>
                          </div>
                        </div>
                        {/*end::Header*/}
                        {/*begin::Body*/}
                        <div className="card-body">
                          {/*begin::Chart*/}
                          <div id="kt_mixed_widget_18_chart" style={{ height: 250 }} />
                          {/*end::Chart*/}
                          {/*begin::Items*/}
                          <div className="mt-n12 position-relative zindex-0">
                            {/*begin::Widget Item*/}
                            <div className="d-flex align-items-center mb-8">
                              {/*begin::Symbol*/}
                              <div className="symbol symbol-circle symbol-40 symbol-light mr-3 flex-shrink-0">
                                <div className="symbol-label">
                                  <span className="svg-icon svg-icon-lg svg-icon-gray-500">
                                    {/*begin::Svg Icon | path:assets/media/svg/icons/Media/Equalizer.svg*/}
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                      <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                        <rect x={0} y={0} width={24} height={24} />
                                        <rect fill="#000000" opacity="0.3" x={13} y={4} width={3} height={16} rx="1.5" />
                                        <rect fill="#000000" x={8} y={9} width={3} height={11} rx="1.5" />
                                        <rect fill="#000000" x={18} y={11} width={3} height={9} rx="1.5" />
                                        <rect fill="#000000" x={3} y={13} width={3} height={7} rx="1.5" />
                                      </g>
                                    </svg>
                                    {/*end::Svg Icon*/}
                                  </span>
                                </div>
                              </div>
                              {/*end::Symbol*/}
                              {/*begin::Title*/}
                              <div>
                                <a href="#" className="font-size-h6 text-dark-75 text-hover-primary font-weight-bolder">Most Sales</a>
                                <div className="font-size-sm text-muted font-weight-bold mt-1">Authors with the best sales</div>
                              </div>
                              {/*end::Title*/}
                            </div>
                            {/*end::Widget Item*/}
                            {/*begin::Widget Item*/}
                            <div className="d-flex align-items-center mb-8">
                              {/*begin::Symbol*/}
                              <div className="symbol symbol-circle symbol-40 symbol-light mr-3 flex-shrink-0">
                                <div className="symbol-label">
                                  <span className="svg-icon svg-icon-lg svg-icon-gray-500">
                                    {/*begin::Svg Icon | path:assets/media/svg/icons/Shopping/Chart-pie.svg*/}
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                      <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                        <rect x={0} y={0} width={24} height={24} />
                                        <path d="M4.00246329,12.2004927 L13,14 L13,4.06189375 C16.9463116,4.55399184 20,7.92038235 20,12 C20,16.418278 16.418278,20 12,20 C7.64874861,20 4.10886412,16.5261253 4.00246329,12.2004927 Z" fill="#000000" opacity="0.3" />
                                        <path d="M3.0603968,10.0120794 C3.54712466,6.05992157 6.91622084,3 11,3 L11,11.6 L3.0603968,10.0120794 Z" fill="#000000" />
                                      </g>
                                    </svg>
                                    {/*end::Svg Icon*/}
                                  </span>
                                </div>
                              </div>
                              {/*end::Symbol*/}
                              {/*begin::Title*/}
                              <div>
                                <a href="#" className="font-size-h6 text-dark-75 text-hover-primary font-weight-bolder">Total Sales Lead</a>
                                <div className="font-size-sm text-muted font-weight-bold mt-1">40% increased on week-to-week reports</div>
                              </div>
                              {/*end::Title*/}
                            </div>
                            {/*end::Widget Item*/}
                            {/*begin::Widget Item*/}
                            <div className="d-flex align-items-center">
                              {/*begin::Symbol*/}
                              <div className="symbol symbol-circle symbol-40 symbol-light mr-3 flex-shrink-0">
                                <div className="symbol-label">
                                  <span className="svg-icon svg-icon-lg svg-icon-gray-500">
                                    {/*begin::Svg Icon | path:assets/media/svg/icons/Design/Layers.svg*/}
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                      <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                        <polygon points="0 0 24 0 24 24 0 24" />
                                        <path d="M12.9336061,16.072447 L19.36,10.9564761 L19.5181585,10.8312381 C20.1676248,10.3169571 20.2772143,9.3735535 19.7629333,8.72408713 C19.6917232,8.63415859 19.6104327,8.55269514 19.5206557,8.48129411 L12.9336854,3.24257445 C12.3871201,2.80788259 11.6128799,2.80788259 11.0663146,3.24257445 L4.47482784,8.48488609 C3.82645598,9.00054628 3.71887192,9.94418071 4.23453211,10.5925526 C4.30500305,10.6811601 4.38527899,10.7615046 4.47382636,10.8320511 L4.63,10.9564761 L11.0659024,16.0730648 C11.6126744,16.5077525 12.3871218,16.5074963 12.9336061,16.072447 Z" fill="#000000" fillRule="nonzero" />
                                        <path d="M11.0563554,18.6706981 L5.33593024,14.122919 C4.94553994,13.8125559 4.37746707,13.8774308 4.06710397,14.2678211 C4.06471678,14.2708238 4.06234874,14.2738418 4.06,14.2768747 L4.06,14.2768747 C3.75257288,14.6738539 3.82516916,15.244888 4.22214834,15.5523151 C4.22358765,15.5534297 4.2250303,15.55454 4.22647627,15.555646 L11.0872776,20.8031356 C11.6250734,21.2144692 12.371757,21.2145375 12.909628,20.8033023 L19.7677785,15.559828 C20.1693192,15.2528257 20.2459576,14.6784381 19.9389553,14.2768974 C19.9376429,14.2751809 19.9363245,14.2734691 19.935,14.2717619 L19.935,14.2717619 C19.6266937,13.8743807 19.0546209,13.8021712 18.6572397,14.1104775 C18.654352,14.112718 18.6514778,14.1149757 18.6486172,14.1172508 L12.9235044,18.6705218 C12.377022,19.1051477 11.6029199,19.1052208 11.0563554,18.6706981 Z" fill="#000000" opacity="0.3" />
                                      </g>
                                    </svg>
                                    {/*end::Svg Icon*/}
                                  </span>
                                </div>
                              </div>
                              {/*end::Symbol*/}
                              {/*begin::Title*/}
                              <div>
                                <a href="#" className="font-size-h6 text-dark-75 text-hover-primary font-weight-bolder">Average Bestseller</a>
                                <div className="font-size-sm text-muted font-weight-bold mt-1">Pitstop Email Marketing</div>
                              </div>
                              {/*end::Title*/}
                            </div>
                            {/*end::Widget Item*/}
                          </div>
                          {/*end::Items*/}
                        </div>
                        {/*end::Body*/}
                      </div>
                      {/*end::Mixed Widget 18*/}
                    </div>
                    <div className="col-xl-4">
                      {/*begin::List Widget 7*/}
                      <div className="card card-custom gutter-b card-stretch">
                        {/*begin::Header*/}
                        <div className="card-header border-0">
                          <h3 className="card-title font-weight-bolder text-dark">Tasks</h3>
                          <div className="card-toolbar">
                            <div className="dropdown dropdown-inline">
                              <a href="#" className="btn btn-clean btn-hover-light-primary btn-sm btn-icon" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i className="ki ki-bold-more-ver" />
                              </a>
                              <div className="dropdown-menu dropdown-menu-md dropdown-menu-right">
                                {/*begin::Naviigation*/}
                                <ul className="navi">
                                  <li className="navi-header font-weight-bold py-5">
                                    <span className="font-size-lg">Add New:</span>
                                    <i className="flaticon2-information icon-md text-muted" data-toggle="tooltip" data-placement="right" title="Click to learn more..." />
                                  </li>
                                  <li className="navi-separator mb-3 opacity-70" />
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-icon">
                                        <i className="flaticon2-shopping-cart-1" />
                                      </span>
                                      <span className="navi-text">Order</span>
                                    </a>
                                  </li>
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-icon">
                                        <i className="navi-icon flaticon2-calendar-8" />
                                      </span>
                                      <span className="navi-text">Members</span>
                                      <span className="navi-label">
                                        <span className="label label-light-danger label-rounded font-weight-bold">3</span>
                                      </span>
                                    </a>
                                  </li>
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-icon">
                                        <i className="navi-icon flaticon2-telegram-logo" />
                                      </span>
                                      <span className="navi-text">Project</span>
                                    </a>
                                  </li>
                                  <li className="navi-item">
                                    <a href="#" className="navi-link">
                                      <span className="navi-icon">
                                        <i className="navi-icon flaticon2-new-email" />
                                      </span>
                                      <span className="navi-text">Record</span>
                                      <span className="navi-label">
                                        <span className="label label-light-success label-rounded font-weight-bold">5</span>
                                      </span>
                                    </a>
                                  </li>
                                  <li className="navi-separator mt-3 opacity-70" />
                                  <li className="navi-footer pt-5 pb-4">
                                    <a className="btn btn-light-primary font-weight-bolder btn-sm" href="#">More options</a>
                                    <a className="btn btn-clean font-weight-bold btn-sm d-none" href="#" data-toggle="tooltip" data-placement="right" title="Click to learn more...">Learn more</a>
                                  </li>
                                </ul>
                                {/*end::Naviigation*/}
                              </div>
                            </div>
                          </div>
                        </div>
                        {/*end::Header*/}
                        {/*begin::Body*/}
                        <div className="card-body pt-0">
                          {/*begin::Item*/}
                          <div className="d-flex align-items-center flex-wrap mb-10">
                            {/*begin::Symbol*/}
                            <div className="symbol symbol-50 symbol-light mr-5">
                              <span className="symbol-label">
                                <img src="./assets/dist/assets/media/svg/misc/006-plurk.svg" className="h-50 align-self-center" alt />
                              </span>
                            </div>
                            {/*end::Symbol*/}
                            {/*begin::Text*/}
                            <div className="d-flex flex-column flex-grow-1 mr-2">
                              <a href="#" className="font-weight-bold text-dark-75 text-hover-primary font-size-lg mb-1">Top Authors</a>
                              <span className="text-muted font-weight-bold">Mark, Rowling, Esther</span>
                            </div>
                            {/*end::Text*/}
                            <span className="label label-xl label-light label-inline my-lg-0 my-2 text-dark-50 font-weight-bolder">+82$</span>
                          </div>
                          {/*end::Item*/}
                          {/*begin::Item*/}
                          <div className="d-flex align-items-center flex-wrap mb-10">
                            {/*begin::Symbol*/}
                            <div className="symbol symbol-50 symbol-light mr-5">
                              <span className="symbol-label">
                                <img src="./assets/dist/assets/media/svg/misc/015-telegram.svg" className="h-50 align-self-center" alt />
                              </span>
                            </div>
                            {/*end::Symbol*/}
                            {/*begin::Text*/}
                            <div className="d-flex flex-column flex-grow-1 mr-2">
                              <a href="#" className="font-weight-bold text-dark-75 text-hover-primary font-size-lg mb-1">Popular Authors</a>
                              <span className="text-muted font-weight-bold">Randy, Steve, Mike</span>
                            </div>
                            {/*end::Text*/}
                            <span className="label label-xl label-light label-inline my-lg-0 my-2 text-dark-50 font-weight-bolder">+280$</span>
                          </div>
                          {/*end::Item*/}
                          {/*begin::Item*/}
                          <div className="d-flex align-items-center flex-wrap mb-10">
                            {/*begin::Symbol*/}
                            <div className="symbol symbol-50 symbol-light mr-5">
                              <span className="symbol-label">
                                <img src="./assets/dist/assets/media/svg/misc/003-puzzle.svg" className="h-50 align-self-center" alt />
                              </span>
                            </div>
                            {/*end::Symbol*/}
                            {/*begin::Text*/}
                            <div className="d-flex flex-column flex-grow-1 mr-2">
                              <a href="#" className="font-weight-bold text-dark-75 text-hover-primary font-size-lg mb-1">New Users</a>
                              <span className="text-muted font-weight-bold">John, Pat, Jimmy</span>
                            </div>
                            {/*end::Text*/}
                            <span className="label label-xl label-light label-inline my-lg-0 my-2 text-dark-50 font-weight-bolder">+4500$</span>
                          </div>
                          {/*end::Item*/}
                          {/*begin::Item*/}
                          <div className="d-flex align-items-center flex-wrap mb-10">
                            {/*begin::Symbol*/}
                            <div className="symbol symbol-50 symbol-light mr-5">
                              <span className="symbol-label">
                                <img src="./assets/dist/assets/media/svg/misc/005-bebo.svg" className="h-50 align-self-center" alt />
                              </span>
                            </div>
                            {/*end::Symbol*/}
                            {/*begin::Text*/}
                            <div className="d-flex flex-column flex-grow-1 mr-2">
                              <a href="#" className="font-weight-bold text-dark-75 text-hover-primary font-size-lg mb-1">Active Customers</a>
                              <span className="text-muted font-weight-bold">Sandra, Tim, Louis</span>
                            </div>
                            {/*end::Text*/}
                            <span className="label label-xl label-light label-inline my-lg-0 my-2 text-dark-50 font-weight-bolder">+4500$</span>
                          </div>
                          {/*end::Item*/}
                          {/*begin::Item*/}
                          <div className="d-flex align-items-center flex-wrap">
                            {/*begin::Symbol*/}
                            <div className="symbol symbol-50 symbol-light mr-5">
                              <span className="symbol-label">
                                <img src="./assets/dist/assets/media/svg/misc/014-kickstarter.svg" className="h-50 align-self-center" alt />
                              </span>
                            </div>
                            {/*end::Symbol*/}
                            {/*begin::Text*/}
                            <div className="d-flex flex-column flex-grow-1 mr-2">
                              <a href="#" className="font-weight-bold text-dark-75 text-hover-primary font-size-lg mb-1">Bestseller Theme</a>
                              <span className="text-muted font-weight-bold">Disco, Retro, Sports</span>
                            </div>
                            {/*end::Text*/}
                            <span className="label label-xl label-light label-inline my-lg-0 my-2 text-dark-50 font-weight-bolder">+4500$</span>
                          </div>
                          {/*end::Item*/}
                        </div>
                        {/*end::Body*/}
                      </div>
                      {/*end::List Widget 7*/}
                    </div>
                  </div>





                </div>







              </div>
            </div>
          </div>



        </div>
        {/*end::Content*/}


      </div>
      <Footer />
    </div>

  );
};

export default Dashboard;





import React, { Component } from "react";
import Form from "react-validation/build/form";
import Input from "react-validation/build/input";
import CheckButton from "react-validation/build/button";
import { Redirect, Switch } from 'react-router-dom';
import Header from './Header';
import Footer from './Footer'
import Menu_Aside from "./Menu_Aside";
import AuthLogin from "../Authentications/AuthLogin";
import axios from "axios";
import Spinner from 'react-bootstrap/Spinner'






const required = value => {
    if (!value) {
        return (
            <div className="alert alert-danger" role="alert">
                This field is required!
            </div>
        );
    }
};

export default class EditTask extends Component {

    constructor(props) {
        super(props);
        this.handleStatus = this.handleStatus.bind(this);
        this.onChangeStatus = this.onChangeStatus.bind(this);

        this.handleTaskDocument = this.handleTaskDocument.bind(this);
        this.onChangeTitle = this.onChangeTitle.bind(this);
        this.onChangeFile = this.onChangeFile.bind(this);


        this.state = {
            status: "",
            loading: false,
            show: false,
            message: "",
            title: "",
            file: ""
        };
    }

    onChangeTitle(e) {
        this.setState({
            title: e.target.value
        })
    }

    onChangeFile(e) {

        this.setState({
            file: e.target.value
        })
    }

    onChangeStatus(e) {
        this.setState({
            status: e.target.value
        });
    }

    ChangeStatus(status) {

        let username = 'admin';
        let password = 'Pass@1234';
        const token = Buffer.from(`${username}:${password}`, 'utf8').toString('base64')
        const singleTask = JSON.parse(localStorage.getItem('singleTask'))
        const TaskPk = singleTask.pk;
        // console.log(TaskPk)

        return axios.put(`https://ecological1.chinikiguard.com/projects/api/tasks/update/${TaskPk}/`, {
            status: `${status}`,
        },
            {
                headers: {
                    'Authorization': `Basic ${token}`,
                    'Access-Control-Allow-Origin': '*',
                    'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',
                    'Access-Control-Allow-Credentials': true
                },
            }
        )

            .then(res => {
                if (res.data) {
                    localStorage.setItem("singleTask", JSON.stringify(singleTask));
                    // localStorage.setItem("statusTask", JSON.stringify(res.data.status));


                }


                // console.log(res);
                // console.log(res.data.status);

                window.location = "/Alltasks"
            })
    }




    handleStatus(e) {
        e.preventDefault();

        this.setState({
            message: "",
            successful: false,
            loading: true

        });

        this.form.validateAll();
        if (this.checkBtn.context._errors.length === 0) {
            this.ChangeStatus(
                this.state.status
            ).then(
                response => {
                    this.setState({
                        message: response.data.detail,
                        successful: true,
                        loading: true
                    });

                    // window.location = "/Alltasks"
                },
                error => {
                    const resMessage =
                        (error.response &&
                            error.response.data &&
                            error.response.data.message) ||
                        error.message ||
                        error.toString();
                    this.setState({
                        successful: false,
                        message: resMessage,
                        loading: true
                    });
                }
            );
        }
    }


    handleTaskDocument(e) {
        e.preventDefault();

        this.setState({
            message: "",
            successful: false,
            loading: true

        });
        this.form.validateAll();
        if (this.checkBtn.context._errors.length === 0) {
            AuthLogin.TaskDocument(
                this.state.file,
                this.state.title,
                this.state.task
            ).then(
                response => {
                    this.setState({
                        message: response.data.detail,
                        successful: true,
                        loading: true
                    });

                    // window.location = "/Alltasks"
                },
                error => {
                    const resMessage =
                        (error.response &&
                            error.response.data &&
                            error.response.data.message) ||
                        error.message ||
                        error.toString();
                    this.setState({
                        successful: false,
                        message: resMessage,
                        loading: true
                    });
                }
            );
        }


    }

    render() {

        if (!localStorage.getItem('user')) {

            return (<Redirect to={'/login'} />)
        }

        const singleTask = JSON.parse(localStorage.getItem('singleTask'))
        // const statussTask = JSON.parse(localStorage.getItem('statusTask'))

        // console.log(singleTask)

        const { loading } = this.state;


        // if (this.state.redirectToReferrer) {
        //     return (<Redirect to={'/dashboard'} />)
        // }

        // if (sessionStorage.getItem('token')) {
        //     return (<Redirect to={'/dashboard'} />)
        // }



        return (
            <div>

                <Header />


                <div className="d-flex flex-column flex-root">
                    {/*begin::Page*/}
                    <div className="d-flex flex-row flex-column-fluid page">
                        {/*begin::Wrapper*/}
                        <div className="d-flex flex-column flex-row-fluid wrapper" id="kt_wrapper">

                            {/*begin::Content*/}
                            <div className="content d-flex flex-column flex-column-fluid" id="kt_content">

                                <div className="d-flex flex-column-fluid">
                                    {/*begin::Container*/}
                                    <div className="container">

                                        <div className="card card-custom gutter-b">
                                            <div className="card-body">
                                                <div className="d-flex">
                                                    {/*begin: Pic*/}
                                                    <div className="flex-shrink-0 mr-7 mt-lg-0 mt-3">
                                                        <div className="symbol symbol-50 symbol-lg-120">
                                                            {/* <img alt="Pic" src="assets/media/project-logos/3.png" /> */}
                                                        </div>
                                                        <div className="symbol symbol-50 symbol-lg-120 symbol-primary d-none">
                                                            <span className="font-size-h3 symbol-label font-weight-boldest"></span>
                                                        </div>
                                                    </div>
                                                    {/*end: Pic*/}
                                                    {/*begin: Info*/}
                                                    <div className="flex-grow-1">
                                                        {/*begin: Title*/}
                                                        <div className="d-flex align-items-center justify-content-between flex-wrap">
                                                            <div className="mr-3">
                                                                {/*begin::Name*/}
                                                                <a href="#" className="d-flex align-items-center text-dark text-hover-primary font-size-h5 font-weight-bold mr-3">{singleTask.title}
                                                                    <i className="flaticon2-correct text-success icon-md ml-2" /></a>
                                                                <div className>
                                                                    {/* <div className="font-weight-bold mb-2">Project Name</div> */}
                                                                    <span className="flex-grow-1 flex-shrink-0 w-150px w-xl-300px mt-4 mt-sm-0">{singleTask.project_name}</span>
                                                                </div>
                                                                {/*end::Name*/}
                                                                {/*begin::Contacts*/}
                                                                <div className="d-flex flex-wrap my-2">

                                                                    <a href="#" className="text-muted text-hover-primary font-weight-bold mr-lg-8 mr-5 mb-lg-0 mb-2">
                                                                        <span className="svg-icon svg-icon-md svg-icon-gray-500 mr-1">
                                                                            {/*begin::Svg Icon | path:assets/media/svg/icons/General/Lock.svg*/}
                                                                            <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                                                                <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                                                                    <mask fill="white">
                                                                                        <use xlinkHref="#path-1" />
                                                                                    </mask>
                                                                                    <g />
                                                                                    <path d="M7,10 L7,8 C7,5.23857625 9.23857625,3 12,3 C14.7614237,3 17,5.23857625 17,8 L17,10 L18,10 C19.1045695,10 20,10.8954305 20,12 L20,18 C20,19.1045695 19.1045695,20 18,20 L6,20 C4.8954305,20 4,19.1045695 4,18 L4,12 C4,10.8954305 4.8954305,10 6,10 L7,10 Z M12,5 C10.3431458,5 9,6.34314575 9,8 L9,10 L15,10 L15,8 C15,6.34314575 13.6568542,5 12,5 Z" fill="#000000" />
                                                                                </g>
                                                                            </svg>
                                                                            {/*end::Svg Icon*/}
                                                                        </span>{singleTask.assigned_to_name}</a>
                                                                    <a href="#" className="text-muted text-hover-primary font-weight-bold">
                                                                        <span className="svg-icon svg-icon-md svg-icon-gray-500 mr-1">
                                                                            {/*begin::Svg Icon | path:assets/media/svg/icons/Map/Marker2.svg*/}
                                                                            <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                                                                <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                                                                                    <rect x={0} y={0} width={24} height={24} />
                                                                                    <path d="M9.82829464,16.6565893 C7.02541569,15.7427556 5,13.1079084 5,10 C5,6.13400675 8.13400675,3 12,3 C15.8659932,3 19,6.13400675 19,10 C19,13.1079084 16.9745843,15.7427556 14.1717054,16.6565893 L12,21 L9.82829464,16.6565893 Z M12,12 C13.1045695,12 14,11.1045695 14,10 C14,8.8954305 13.1045695,8 12,8 C10.8954305,8 10,8.8954305 10,10 C10,11.1045695 10.8954305,12 12,12 Z" fill="#000000" />
                                                                                </g>
                                                                            </svg>
                                                                            {/*end::Svg Icon*/}
                                                                        </span>{singleTask.location}</a>
                                                                </div>
                                                                {/*end::Contacts*/}
                                                            </div>
                                                            <div className="my-lg-0 my-1">
                                                                {/* <a href="#" className="btn btn-sm btn-light-success font-weight-bolder text-uppercase mr-3">Reports</a> */}
                                                                <a href="#" className="btn btn-sm btn-light-success  font-weight-bolder text-uppercase">{singleTask.status}</a>
                                                            </div>
                                                        </div>
                                                        {/*end: Title*/}
                                                        {/*begin: Content*/}
                                                        <div className="d-flex align-items-center flex-wrap justify-content-between">

                                                            <div className="flex-grow-1 font-weight-bold text-dark-50 py-5 py-lg-2 mr-5">{singleTask.description}</div>


                                                            <div className="d-flex flex-wrap align-items-center py-2">

                                                                <div className="d-flex align-items-center mr-10">

                                                                    <div className="mr-6">
                                                                        <div className="font-weight-bold mb-2">Start Date</div>
                                                                        <span className="btn btn-sm btn-text btn-light-primary text-uppercase font-weight-bold">{singleTask.start_date}</span>
                                                                    </div>
                                                                    <div className>
                                                                        <div className="font-weight-bold mb-2">Due Date</div>
                                                                        <span className="btn btn-sm btn-text btn-light-danger text-uppercase font-weight-bold">{singleTask.due_date}</span>
                                                                    </div>

                                                                </div>
                                                                <div >
                                                                    <div className="flex-grow-1 flex-shrink-0 w-150px w-xl-300px mt-4 mt-sm-0">
                                                                        <div className="font-weight-bold mb-2">Progress</div>
                                                                        <div className="progress progress-xs mt-2 mb-2">
                                                                            <div className="progress-bar bg-success" role="progressbar" style={{ width: `${singleTask.progress}` }} aria-valuenow={50} aria-valuemin={0} aria-valuemax={100} />
                                                                        </div>
                                                                        <span className="font-weight-bolder text-dark">{singleTask.progress}</span>
                                                                    </div>
                                                                    <span className="font-weight-bold"></span>
                                                                    {/* <div className="progress progress-xs mt-2 mb-2"> */}
                                                                    {/* <div className="progress-bar bg-success" role="progressbar" style={{ width: `${singleTask.progress}` }} aria-valuenow={50} aria-valuemin={0} aria-valuemax={100} /> */}
                                                                    {/* </div> */}
                                                                    {/* <span className="font-weight-bolder text-dark">{singleTask.project}</span> */}
                                                                </div>
                                                            </div>
                                                        </div>
                                                        {/*end: Content*/}
                                                    </div>
                                                    {/*end: Info*/}
                                                </div>
                                                <Form onSubmit={this.handleStatus} ref={c => { this.form = c; }} className="form" id="kt_form">
                                                    {!this.state.successful && (
                                                        <div>
                                                            <div className="separator separator-solid my-7" />
                                                            <div className="form-group">
                                                                <label><h5>Change Status</h5></label>
                                                                <select name="country" className="form-control"
                                                                    value={this.state.status}
                                                                    onChange={this.onChangeStatus}
                                                                    validations={[required]}
                                                                    name="projectstatus"
                                                                >
                                                                    <option value>Select</option>
                                                                    <option value="open">Open</option>
                                                                    <option value="inprogress">In Progress</option>
                                                                    <option value="completed">Completed</option>
                                                                </select>
                                                            </div>
                                                            <center>
                                                                <button id="kt_login_singin_form_submit_button"
                                                                    className="btn btn-sm btn-primary font-weight-bolder text-uppercase"
                                                                    // data-wizard-type="step-content"
                                                                    enabled={this.state.loading}
                                                                >
                                                                    {this.state.loading && (
                                                                        <center><Spinner animation="border" variant="white" /></center>
                                                                    )}
                                                                    <span>Change</span>
                                                                </button></center>
                                                            <CheckButton
                                                                style={{ display: "none" }}
                                                                ref={c => {
                                                                    this.checkBtn = c;
                                                                }}
                                                            />
                                                        </div>
                                                    )}
                                                    {this.state.message && (

                                                        <div className="pb-5" >
                                                            <div
                                                                className={
                                                                    this.state.successful
                                                                        ? "alert alert-custom alert-outline-success fade show mb-5"
                                                                        : "alert alert-custom alert-outline-danger fade show mb-5"
                                                                }
                                                                role="alert"
                                                            >
                                                                {this.state.message}
                                                            </div>
                                                        </div>
                                                    )}
                                                </Form>



                                                <Form onSubmit={this.handleTaskDocument} ref={c => { this.form = c; }} className="form" id="kt_form">
                                                    <div className="form-group">
                                                        <label><h5>Image Upload</h5></label>
                                                        <div></div>
                                                        <div className="custom-file">
                                                            <input type="file" className="custom-file-input" id="customFile" 
                                                            value={this.state.file}
                                                            onChange={this.onChangeFile}
                                                            validations={[required]}
                                                            />
                                                            <label className="custom-file-label" for="customFile">Choose Image</label>
                                                        </div>
                                                    </div>


                                                  <center>  
                                                        <button type="reset" className="btn btn-primary mr-2">Submit</button>
                                                    </center>


                                                </Form>

                                            </div>

                                        </div>

                                        <Footer />

                                    </div>

                                    {/*end::Container*/}
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>





        );
    }
}


















